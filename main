import wikipedia


def wrap_text(text, line_length=150):
    wrapped_text = ""
    words = text.split()
    line = ""
    for word in words:
        if len(line) + len(word) <= line_length:
            line += word + " "
        else:
            wrapped_text += line.strip() + '\n'
            line = word + " "
    wrapped_text += line.strip()
    return wrapped_text


def get_article_summary(query, language):
    wikipedia.set_lang(language)
    try:
        summary = wikipedia.summary(query)
        return wrap_text(summary)
    except wikipedia.exceptions.DisambiguationError:
        print("Неоднозначный запрос. Пожалуйста, уточните ваш запрос.")
    except wikipedia.exceptions.PageError:
        print("Страница не найдена. Пожалуйста, попробуйте другой запрос.")


def select_article(search_results):
    for idx, result in enumerate(search_results, start=1):
        print(f"{idx}. {result}")
    while True:
        try:
            choice = int(input("\nВведите номер статьи для прочтения (или 0 для выхода): "))
            if choice == 0:
                return None
            elif choice < 1 or choice > len(search_results):
                print("Пожалуйста, введите корректный номер статьи.")
            else:
                return choice - 1
        except ValueError:
            print("Пожалуйста, введите номер цифрой.")


def main():
    query = input("Что вы хотите узнать?\n")
    try:
        search_results = wikipedia.search(query)
        if not search_results:
            print("Ничего не найдено. Пожалуйста, попробуйте другой запрос.")
            return
        article_idx = select_article(search_results)
        if article_idx is None:
            return
        language = input("Выберите язык для перевода (ru/en): ").lower()
        while language not in ('ru', 'en'):
            print("Пожалуйста, выберите корректный язык (ru/en).")
            language = input("Выберите язык для перевода (ru/en): ").lower()
        print("\n")
        print(get_article_summary(search_results[article_idx], language))
    except wikipedia.exceptions.HTTPTimeoutError:
        print("Ошибка: превышено время ожидания запроса к Википедии.")


if __name__ == "__main__":
    main()
